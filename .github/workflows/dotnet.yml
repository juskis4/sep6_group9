name: CI/CD Pipelines

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
  DOTNET_VERSION: '6.0.x'
  GCR_HOSTNAME: 'gcr.io'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4 # Check out the code from your repository

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3 # Set up the .NET environment 
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore # Restore project dependencies

      - name: Clean
        run: dotnet clean # Clean the solution

      - name: Build app
        run: dotnet build -c Release --no-restore # Build the project

      - name: Run automated Tests
        run: dotnet test -c Release --no-build

      # Docker
      - name: Login
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SERVICE_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      
      - name: Build Docker image
        run: docker build -f Dockerfile -t $IMAGE_NAME .
        
      - name: Push Docker image
        run: docker push $IMAGE_NAME 
        
        # Deploy to Google App Engine
      - name: Deploy Docker image
        run: gcloud run deploy ${{ secrets.GCP_PROJECT_ID }} --image $IMAGE_NAME --platform managed
